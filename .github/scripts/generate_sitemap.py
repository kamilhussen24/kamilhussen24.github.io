import os
import time
import subprocess
import xml.etree.ElementTree as ET
from xml.dom import minidom  # тЬЕ XML ржлрж░ржорзНржпрж╛ржЯ ржарж┐ржХ ржХрж░рж╛рж░ ржЬржирзНржп

# ЁЯФ╣ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
SITEMAP_FILE = "sitemap.xml"
BASE_URL = "https://kamilhussen24.github.io"
HTML_DIR = "./"  # HTML ржлрж╛ржЗрж▓рзЗрж░ ржорзВрж▓ ржлрзЛрж▓рзНржбрж╛рж░

# ЁЯФ╣ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржлрж╛ржЗрж▓рзЗрж░ Git ржерзЗржХрзЗ рж▓рж╛рж╕рзНржЯ ржоржбрж┐ржлрж╛ржЗ ржЯрж╛ржЗржо ржмрзЗрж░ ржХрж░рж╛
def get_git_last_modified_time(file_path):
    try:
        result = subprocess.run(
            ["git", "log", "-1", "--format=%cI", file_path],
            capture_output=True, text=True, check=True
        )
        git_time = result.stdout.strip()
        return git_time if git_time else None
    except subprocess.CalledProcessError:
        return None

# ЁЯФ╣ ржирждрзБржи рж╕рж╛ржЗржЯржорзНржпрж╛ржк XML рждрзИрж░рж┐
sitemap = ET.Element("urlset", xmlns="http://www.sitemaps.org/schemas/sitemap/0.9")

# ЁЯФ╣ ржорзВрж▓ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗрж░ URL
index_path = os.path.join(HTML_DIR, "index.html")
index_lastmod = get_git_last_modified_time(index_path) or time.strftime('%Y-%m-%dT%H:%M:%SZ', time.gmtime(os.path.getmtime(index_path)))

index_url = ET.SubElement(sitemap, "url")
ET.SubElement(index_url, "loc").text = BASE_URL
ET.SubElement(index_url, "lastmod").text = index_lastmod
ET.SubElement(index_url, "priority").text = "1.0"
ET.SubElement(index_url, "changefreq").text = "daily"

# ЁЯФ╣ HTML ржлрж╛ржЗрж▓ рж╕рзНржХрзНржпрж╛ржи ржХрж░рж╛ ржПржмржВ рж▓рж╛рж╕рзНржЯ ржоржбрж┐ржлрж╛ржЗржб ржбрзЗржЯ ржпрзБржХрзНржд ржХрж░рж╛
for root, _, files in os.walk(HTML_DIR):
    for file in files:
        if file.endswith(".html") and file != "index.html":  # index.html ржЖрж▓рж╛ржжрж╛ ржХрж░рж╛ рж╣рж▓рзЛ
            file_path = os.path.join(root, file)

            # ЁЯФ╣ ржкрзНрж░ржержорзЗ Git ржерзЗржХрзЗ рж▓рж╛рж╕рзНржЯ ржоржбрж┐ржлрж╛ржЗржб ржЯрж╛ржЗржо ржирзЗржУрзЯрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░ржмрзЛ
            last_mod_time = get_git_last_modified_time(file_path)

            # ЁЯФ╣ ржпржжрж┐ Git ржерзЗржХрзЗ ржирж╛ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯ, рждржмрзЗ ржлрж╛ржЗрж▓рзЗрж░ ржоржбрж┐ржлрж┐ржХрзЗрж╢ржи ржЯрж╛ржЗржо ржирзЗржмрзЛ
            if not last_mod_time:
                last_mod_time = time.strftime('%Y-%m-%dT%H:%M:%SZ', time.gmtime(os.path.getmtime(file_path)))

            # ЁЯФ╣ рж░рж┐рж▓рзЗржЯрж┐ржн ржкрж╛рже ржерзЗржХрзЗ ржХрзНрж▓рж┐ржи URL рждрзИрж░рж┐
            relative_path = os.path.relpath(file_path, HTML_DIR).replace("\\", "/")
            url = f"{BASE_URL}/{relative_path}".replace(".html", "")

            # ЁЯФ╣ XML ржП рж▓рж╛рж╕рзНржЯ ржоржбрж┐ржлрж╛ржЗ рждржерзНржп рж╕рж╣ URL ржпрзЛржЧ ржХрж░рж╛
            url_entry = ET.SubElement(sitemap, "url")
            ET.SubElement(url_entry, "loc").text = url
            ET.SubElement(url_entry, "lastmod").text = last_mod_time
            ET.SubElement(url_entry, "priority").text = "0.8"
            ET.SubElement(url_entry, "changefreq").text = "weekly"

# ЁЯФ╣ XML рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржлрж░ржорзНржпрж╛ржЯ ржХрж░рж╛
xml_string = ET.tostring(sitemap, encoding="utf-8")
xml_pretty = minidom.parseString(xml_string).toprettyxml(indent="  ")  # тЬЕ ржЗржиржбрзЗржирзНржЯ ржарж┐ржХ ржХрж░рж╛

# ЁЯФ╣ рж╕рж╛ржЗржЯржорзНржпрж╛ржк ржлрж╛ржЗрж▓ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛
with open(SITEMAP_FILE, "w", encoding="utf-8") as f:
    f.write(xml_pretty)

print("тЬЕ sitemap.xml рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржЖржкржбрзЗржЯ рж╣ржпрж╝рзЗржЫрзЗ!")
